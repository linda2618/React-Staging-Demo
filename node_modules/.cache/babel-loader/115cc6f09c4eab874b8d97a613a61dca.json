{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-staging\\\\react-staging\\\\src\\\\components\\\\Header\\\\index.jsx\";\nimport React, { Component } from 'react';\n//安装引入nanoid库   (随机生成唯一的id) //UUID也是一个库，比较大\nimport { nanoid } from 'nanoid';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Header extends Component {\n  constructor() {\n    super(...arguments);\n    this.handleKeyUp = e => {\n      const {\n        key,\n        target\n      } = e;\n      //e.keyCode === 13 或者 e.key === 'Enter'(大写) 表示被按下键盘所代表的数字\n      //判断是  是否回车按键\n      if (key !== 'Enter') return;\n      //判断是否为空\n      if (target.value.trim() === '') {\n        alert('输入不能为空！');\n        return;\n      }\n      //准备好一个todo对象\n      const todoObj = {\n        id: nanoid(),\n        name: target.value,\n        done: false\n      };\n      //将todoObj 传递给 App\n      this.props.addTodo123(todoObj);\n      target.value = '';\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-header\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyUp: this.handleKeyUp,\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u4F60\\u7684\\u4EFB\\u52A1\\u540D\\u79F0\\uFF0C\\u6309\\u56DE\\u8F66\\u952E\\u786E\\u8BA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","nanoid","Header","handleKeyUp","e","key","target","value","trim","alert","todoObj","id","name","done","props","addTodo123","render"],"sources":["D:/react-staging/react-staging/src/components/Header/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\n//安装引入nanoid库   (随机生成唯一的id) //UUID也是一个库，比较大\r\nimport {nanoid} from 'nanoid'\r\nimport './index.css'\r\n\r\nexport default class Header extends Component {\r\n  handleKeyUp = (e) => {\r\n    const {key, target} = e\r\n    //e.keyCode === 13 或者 e.key === 'Enter'(大写) 表示被按下键盘所代表的数字\r\n    //判断是  是否回车按键\r\n    if(key !== 'Enter') return\r\n    //判断是否为空\r\n    if(target.value.trim() === ''){\r\n      alert('输入不能为空！')\r\n      return \r\n    }\r\n    //准备好一个todo对象\r\n    const todoObj = {id:nanoid(), name:target.value, done: false}\r\n    //将todoObj 传递给 App\r\n    this.props.addTodo123(todoObj)\r\n    target.value = ''\r\n  }\r\n  render() {\r\n    return (\r\n    <div className=\"todo-header\">\r\n        <input onKeyUp={this.handleKeyUp} type=\"text\" placeholder=\"请输入你的任务名称，按回车键确认\"/>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC;AACA,SAAQC,MAAM,QAAO,QAAQ;AAC7B,OAAO,aAAa;AAAA;AAEpB,eAAe,MAAMC,MAAM,SAASF,SAAS,CAAC;EAAA;IAAA;IAAA,KAC5CG,WAAW,GAAIC,CAAC,IAAK;MACnB,MAAM;QAACC,GAAG;QAAEC;MAAM,CAAC,GAAGF,CAAC;MACvB;MACA;MACA,IAAGC,GAAG,KAAK,OAAO,EAAE;MACpB;MACA,IAAGC,MAAM,CAACC,KAAK,CAACC,IAAI,EAAE,KAAK,EAAE,EAAC;QAC5BC,KAAK,CAAC,SAAS,CAAC;QAChB;MACF;MACA;MACA,MAAMC,OAAO,GAAG;QAACC,EAAE,EAACV,MAAM,EAAE;QAAEW,IAAI,EAACN,MAAM,CAACC,KAAK;QAAEM,IAAI,EAAE;MAAK,CAAC;MAC7D;MACA,IAAI,CAACC,KAAK,CAACC,UAAU,CAACL,OAAO,CAAC;MAC9BJ,MAAM,CAACC,KAAK,GAAG,EAAE;IACnB,CAAC;EAAA;EACDS,MAAM,GAAG;IACP,oBACA;MAAK,SAAS,EAAC,aAAa;MAAA,uBACxB;QAAO,OAAO,EAAE,IAAI,CAACb,WAAY;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAkB;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC5E;EAER;AACF"},"metadata":{},"sourceType":"module"}